:root {
    --degree: 35deg;
    --linearColor1: rgb(127, 156, 93);
    --linearColor2: rgb(199, 236, 228);
    --linearColor3: rgb(0, 188, 212);
    --background: linear-gradient(var(--degree), var(--linearColor1), var(--linearColor2), var(--linearColor3));
    --typeColor: rgba(56, 128, 56, 0.5);
    --emptyColor: rgba(199, 56, 21, 0.5);
    --myOrange: rgb(207, 118, 35);
    --myRed: rgb(163, 29, 19);
    --myGreen: rgb(95, 177, 95);
}

body {
    padding: 0;
    margin: 0;
    width: auto;
    height: auto;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-areas: 
    "addFlashDiv"
    ;
    justify-items: flex-start;
    align-items: flex-start;
    background-color: black;
    transition: background-color 0.3s;
}

#addFlashDiv {
    width: 100%;
    height: auto;
    grid-area: addFlashDiv;
    margin-top: 2rem;
    display: grid;
    justify-items: center;
    align-items: center;
    grid-row-gap: 2rem;
}
#mainButtons {
    width: 100%;
    height: auto;
    display: grid;
    grid-template-columns: 1fr 0.5fr 0.5fr 1fr;
    grid-template-rows: 1fr;
    grid-template-areas: "addFlashCard selectMenu switch selectFlashCard";
    justify-items: center;
    align-items: center;
    z-index: 2;
}
.mainButtons, .hideQuestionAnswer, .delete, #selectMenu, .types, .switch {
    display: grid;
    justify-items: center;
    align-items: center;
    position: relative;
    height: 3rem;
    width: 12rem;
    border: none;
    background: rgba(0, 0, 0, 0.8);
    color: white;
    font-weight: bolder;
    border-radius: 2rem;
    outline: none;
    cursor: pointer;
    transition: all 0.3s;
}
#addFlashCard {
    grid-area: addFlashCard;
}
#selectFlashCard {
    grid-area: selectFlashCard;
}
#selectMenu {
    text-align: center;
    background-color: black;
    width: 6rem;
    border: 3px solid var(--linearColor3);
    transition: all 0.3s;
    grid-area: selectMenu;
}
.option {
    background-color: black;
}
/* The switch - the box around the slider */
.switch {
    position: relative;
    display: inline-block;
    width: 6rem;
    grid-area: switch;
}

  /* Hide default HTML checkbox */
.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

  /* The slider */
.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgb(65, 65, 65);
    -webkit-transition: .3s;
    transition: .3s;
}

.slider:before {
    position: absolute;
    content: "";
    height: 2.5rem;
    width: 2.5rem;
    left: 4px;
    bottom: 4px;
    background-color: white;
    -webkit-transition: .3s;
    transition: .3s;
}

#switchInput:checked + .slider {
    background-color: black;
}

#switchInput:focus + .slider {
    box-shadow: 0 0 1px black;
}

#switchInput:checked + .slider:before {
    -webkit-transform: translateX(3rem);
    -ms-transform: translateX(3rem);
    transform: translateX(3rem);
}

  /* Rounded sliders */
.slider.round {
    border-radius: 34px;
}

.slider.round:before {
    border-radius: 50%;
}
.mainButtons::before, .hideQuestionAnswer::before, .card0Question::before, .card0Answer::before, .delete::before, .types::before {    
    z-index: -1;
}
.mainButtons::after, .hideQuestionAnswer::after, .card0Question::after, .card0Answer::after,.delete::after, .types::after {
    z-index: -1;
    filter: blur(20px);
    transform: scale(1.05);
}
.mainButtons::before, .mainButtons::after, .hideQuestionAnswer::before, .hideQuestionAnswer::after, .card0Question::before, .card0Question::after, .card0Answer::before, .card0Answer::after, .delete::before, .delete::after, .types::before, .types::after{
    content: "";
    position: absolute;
    top: -3px;
    left: -3px;
    right: -3px;
    bottom: -3px;
    background: var(--background);
    border-radius: 2rem;
    transition: all 0.3s;
}
.mouseOver::after {
    transform: scale(1.2);
}
.mouseOver::before, .mouseOver::after{
    background: var(--myOrange);
    transition: all 0.3s;
}
.mouseDown::after {
    transform: scale(1.2);
    filter: blur(30px);
}
.mouseDown::before, .mouseDown::after{
    background: var(--myRed);
    transition: all 0.3s;
}
.selected::after {
    transform: scale(1.2);
}
.selected::before, .selected::after{
    background: var(--myGreen);
    transition: all 0.3s;
}
.noneSelected::before, .noneSelected::after {
    background: gray;
    transition: all 0.3s;
}

.hideQuestionAnswer::before, .hideQuestionAnswer::after, .delete::before, .delete::after {
    background: violet; 
    transition: all 0.3s;
}
.hideQuestionAnswerMouseEnter::before, .hideQuestionAnswerMouseEnter::after, .deleteMouseEnter::before, .deleteMouseEnter::after {
    background: red; 
    transition: all 0.3s;
}
.hideQuestionAnswerMouseDown::before, .hideQuestionAnswerMouseDown::after, .deleteMouseDown::before, .deleteMouseDown::after {
    background: rgb(97, 14, 14); 
    transition: all 0.3s;
}
.card0Question::before, .card0Question::after, .card0Answer::before, .card0Answer::after {
    background: rgb(97, 14, 14);
    transition: all 0.3s;
}
#cardTypes {
    width: 100%;
    height: auto;
    display: none;
    justify-items: center;
    align-items: center;
    grid-row-gap: 2rem;
    padding-top: 3rem;
}

#newCard {
    width: 100%;
    height: auto;
    display: none;
    grid-template-columns: 1.5fr 0.75fr 1.5fr;
    grid-template-areas: 
    "questionDiv hideDeleteContainer answerDiv"
    ;
    justify-items: center;
    align-items: center;
    padding-top: 3rem;
    border: none;
    outline: none;
}
.hideDeleteContainer {
    grid-area: hideDeleteContainer;
    display: grid;
    grid-template-areas: 
    "hide"
    ;
    grid-row-gap: 1rem;
}
#hide {
    grid-area: hide;
}
#delete {
    grid-area: delete;
    display: none;
}
#deleteAll {
    grid-area: deleteAll;
    display: none;
}
#questionDiv {
    grid-area: questionDiv;
    grid-template-areas: 
    "questionHeader"
    "questionTextArea"
    "typeDiv"
    ;
}
#questionDiv::before, #answerDiv::before {    
    z-index: -1;
}
#questionDiv::after, #answerDiv::after {
    z-index: -1;
    filter: blur(30px);
    transform: scale(1);
}
#questionDiv::before, #questionDiv::after, #answerDiv::before, #answerDiv::after {
    content: "";
    position: absolute;
    top: -3px;
    left: -3px;
    right: -3px;
    bottom: -3px;
    background: rgb(7, 33, 150);
    border-radius: 50%;
}

#answerDiv {
    grid-area: answerDiv;
    grid-template-areas: 
    "answerHeader"
    "answerTextArea"
    "saveDiv"
    ;
}
#questionDiv,#answerDiv {
    width: 25rem;
    height: 30rem;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 0.2fr 0.6fr 0.2fr;
    justify-items: center;
    align-items: center;
    border-radius: 50%;
    background: rgba(0, 0, 0, 0.8);
    position: relative;
    color: white;
}

#questionHeader {
    grid-area: questionHeader;
}
#answerHeader {
    grid-area: answerHeader;
}
#questionHeader, #answerHeader {
    border-top-left-radius: 5rem;
    border-top-right-radius: 5rem;
    width: 100%;
    height: 100%;
    display: grid;
    justify-items: center;
    align-items: center;
    font-size: 2rem;
    font-weight: 500;
}
#questionTextArea {
    grid-area: questionTextArea;
}
#answerTextArea {
    grid-area: answerTextArea;
}
#questionTextArea, #answerTextArea {
    width: 20rem;
    height: 15rem;
    text-align: center;
    align-items: center;
    background-color: transparent;
    color: white;
    box-sizing: border-box;
    resize: none;
    outline: none;
    border-top: 5px solid gray;
    border-bottom: 5px solid gray;
    border-radius: 50%;
    padding: 9.5rem 1rem;
    overflow: hidden;
    transition: all 0.3s;
}
#typeDiv {
    grid-area: typeDiv;
}
#saveDiv {
    grid-area: saveDiv;
}
#typeDiv, #saveDiv {
    grid-area: typeDiv;
    background-color: transparent;
    width: 100%;
    height: 100%;
    display: grid;
    justify-items: center;
    align-items: center;
    border-bottom-left-radius: 5rem;
    border-bottom-right-radius: 5rem;
}
#type, .show, .hide {
    text-align: center;
    vertical-align: middle;
    position: relative;
    height: 3rem;
    width: 8rem;
    border: none;
    background: rgb(58, 56, 56);
    color: white;
    font-weight: bold;
    border-radius: 2rem;
    outline: none;
    border-top: 1px solid white;
    border-bottom: 1px solid white;
    cursor: pointer;
    cursor: pointer;
    transition: all 0.3s;
}
#type{
    cursor: initial;
    background: var(--typeColor);
}
#type::placeholder {
    color: white;
}
#saveDiv {
    grid-area: saveDiv;
}
#saveButton {
    display: grid;
    justify-items: center;
    align-items: center;
    position: relative;
    height: 3rem;
    width: 8rem;
    border: none;
    background: rgba(146, 31, 31, 0.5);
    color: white;
    font-weight: bolder;
    border-radius: 2rem;
    outline: none;
    cursor: pointer;
    border-top: 1px solid white;
    border-bottom: 1px solid white;
    transition: all 0.3s;
}

#hide {
    grid-area: hide;
}

#flashCards, .card0Div {
    width: 100%;
    height: 100%;
    display: none;
    justify-items: center;
    align-items: center;
}
.mainCardContainer {
    display: grid;
    justify-items: center;
    align-items: center;
    grid-template-columns: 1.5fr 0.75fr 1.5fr;
    width: 100%;
    height: auto;
    grid-template-areas: 
    "card0Question deleteCard card0Answer"
    ;
    z-index: 1;
    position: relative;
}
@keyframes mainCardContainerAnimation0 {
    from {
        top: 0;
    }
    to {
        top: -100%;
    }
}
@keyframes mainCardContainerAnimation00 {
    from {
        top: 0%;
    }
    to {
        top: 0%;
    }
}
.card0Question, .card0Answer {
    display: grid;
    justify-items: center;
    align-items: center;
    position: relative;
    height: 20rem;
    width: 20rem;
    border: none;
    background: rgba(0, 0, 0, 0.8);
    color: white;
    font-weight: bolder;
    border-radius: 2rem;
    outline: none;
    grid-template-columns: 1fr;
    grid-template-rows: 0.7fr 0.3fr;
}
.card0Question {
    left: 75%;
    animation: cardAnimation0 2s forwards;
    grid-area: card0Question;
}
@keyframes cardAnimation0 {
    from {
        left: 75%;
    }
    to {
        left: 0%;
    }
}
@keyframes cardAnimation00 {
    from {
        left: 0%;
    }
    to {
        left: 75%;
    }
}
.card0Answer {
    left: -75%;
    animation: cardAnimation1 2s forwards;
    grid-area: card0Answer;
}
@keyframes cardAnimation1 {
    from {
        left: -75%;
    }
    to {
        left: 0%;
    }
}
@keyframes cardAnimation11 {
    from {
        left: 0%;
    }
    to {
        left: -75%;
    }
}
.questionInner{
    grid-area: questionInner;
}
.showHideDiv {
    display: grid;
    justify-items: center;
    align-items: center;
    height: 100%;
    width: 100%;
    grid-template-columns: 0.5fr 0.5fr;
    grid-area: showHideDiv;
}
.deleteCard {
    width: 100%;
    height: 100%;
    display: grid;
    justify-items: center;
    align-items: center;
    z-index: -1;
    grid-area: deleteCard;
}
@media (max-width: 1295px) {
    #questionDiv, #answerDiv {
        border-radius: 2rem;
        width: 20rem;
    }
    #questionDiv::before, #questionDiv::after, #answerDiv::before, #answerDiv::after {
        border-radius: 2rem;
    }
    #questionTextArea, #answerTextArea {
        width: 20rem;
        height: 10rem;
    }
}
@media (max-width: 990px) {
    .card0Question, .card0Answer {
        height: 15rem;
        width: 15rem;
    }
    .show, .hide {
        width: 6rem;
    }
}
@media (max-width: 860px) {
    #questionDiv, #answerDiv {
        width: 15rem;
    }
    #questionTextArea, #answerTextArea {
        width: 15rem;
    }
}
@media (max-width: 700px) {
    #questionDiv, #answerDiv {
        width: 12rem;
        transform: s;
    }
    #questionTextArea, #answerTextArea {
        width: 10rem;
        border-radius: 2rem;
    }
    #newCard {
        grid-template-columns: 1.5fr 1.5fr;
        grid-template-rows: 1fr 0.2fr;        
        grid-template-areas: 
        "questionDiv answerDiv"
        "hideDeleteContainer hideDeleteContainer"
        ;
    }
    #mainButtons {
        grid-template-columns: 1fr 1fr;
        grid-template-rows: 1fr 1fr;
        grid-template-areas: 
        "addFlashCard selectFlashCard"
        "selectMenu switch"
        ;
        grid-row-gap: 1rem;
    }
    .mainCardContainer {
        grid-template-columns: 1fr;
        grid-template-rows: 1fr 1fr 1ft;
        grid-template-areas: 
        "card0Question"
        "deleteCard"
        "card0Answer"
        ;
        grid-row-gap: 1rem;
    }

}

@media (max-width: 400px) {
    #newCard {
        grid-template-columns: 3fr ;
        grid-template-rows: 1fr 0.2fr 1fr;        
        grid-template-areas: 
        "questionDiv"
        "hideDeleteContainer"
        "answerDiv"
        ;
    }
    #mainButtons {
        grid-template-columns: 1fr;
        grid-template-rows: repeat(4, 1fr);
        grid-template-areas: 
        "addFlashCard"
        "selectFlashCard"
        "switch"
        "selectMenu"
        ;
        grid-row-gap: 1rem;
    }
}
@media (max-width: 350px) {
    #questionDiv, #answerDiv {
        width: 80%;
    }
    #questionTextArea, #answerTextArea {
        width: 80%;
    }
    .mainButtons {
        width: 6rem;
    }
    #type, #saveButton {
        width: 6rem;
    }
}
@media (max-width: 250px) {
    #questionDiv, #answerDiv {
        width: 90%;
    }
    #questionTextArea, #answerTextArea {
        width: 100%;
    }
    #questionHeader, #answerHeader {
        font-size: 1.4rem;
    }
    .hideQuestionAnswer{
        width: 6rem;
    }
    .card0Question, .card0Answer {
        height: 10rem;
        width: 10rem;
    }
    .show, .hide {
        width: 3rem;
    }
}